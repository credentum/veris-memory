version: "3.8"

services:
  # Veris Sentinel - Autonomous Monitoring Agent
  veris-sentinel:
    build:
      context: .
      dockerfile: dockerfiles/Dockerfile.sentinel
    container_name: veris-sentinel
    user: "10001:10001"
    cap_drop:
      - ALL
    read_only: true
    networks:
      - veris-memory-dev_default  # Connect to main Veris network
    depends_on:
      - veris-memory-dev-context-store-1
    environment:
      # Target configuration
      - TARGET_BASE_URL=http://veris-memory-dev-context-store-1:8000
      - REDIS_URL=redis://veris-memory-dev-redis-1:6379
      - QDRANT_URL=http://veris-memory-dev-qdrant-1:6333
      - NEO4J_BOLT=bolt://veris-memory-dev-neo4j-1:7687
      - NEO4J_USER=veris_ro
      
      # Scheduling configuration
      - SCHEDULE_CADENCE_SEC=60
      - MAX_JITTER_PCT=20
      - PER_CHECK_TIMEOUT_SEC=10
      - CYCLE_BUDGET_SEC=45
      - MAX_PARALLEL_CHECKS=4
      
      # Security credentials (from secrets)
      - NEO4J_PASS_FILE=/run/secrets/neo4j_ro_password
      - JWT_ADMIN_FILE=/run/secrets/jwt_admin
      - JWT_READER_FILE=/run/secrets/jwt_reader
      
      # TLS configuration (optional)
      - CLIENT_TLS_CERT=/run/certs/client.crt
      - CLIENT_TLS_KEY=/run/certs/client.key
      - CLIENT_TLS_CA=/run/certs/ca.crt
      
      # Alerting configuration
      - ALERT_WEBHOOK=${ALERT_WEBHOOK:-}
      - GITHUB_REPO=${GITHUB_REPO:-credentum/veris-memory}
      - GITHUB_TOKEN_FILE=/run/secrets/github_token
      
      # Logging
      - LOG_LEVEL=INFO
      - SENTINEL_API_PORT=9090
      
    ports:
      - "127.0.0.1:9090:9090"  # Metrics and status API (localhost only)
      
    volumes:
      # Persistent state storage
      - sentinel-state:/var/lib/sentinel
      
      # Secret mounts (optional - create these directories if using secrets)
      # - /opt/veris-secrets:/run/secrets:ro
      # - /opt/veris-certs:/run/certs:ro
      
      # Temporary writable directories
      - type: tmpfs
        target: /tmp
        tmpfs:
          size: 100M
          
    # Resource limits appropriate for monitoring workload
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'
          
    # Health check for the sentinel itself
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9090/status"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
      
    restart: unless-stopped

# Use external network to connect to existing Veris Memory services
networks:
  veris-memory-dev_default:
    external: true

volumes:
  sentinel-state:
    name: veris-sentinel-state