name: CVE Security Scan

on:
  push:
    paths:
      - "src/**"
      - "dockerfiles/**"
      - ".github/workflows/cve-scan.yml"
  pull_request:
    paths:
      - "src/**"
      - "dockerfiles/**"
      - ".github/workflows/cve-scan.yml"
  schedule:
    # Run daily at 2 AM UTC
    - cron: "0 2 * * *"

jobs:
  cve-scan:
    name: CVE Security Scan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Free up disk space
        run: |
          echo "Available disk space before cleanup:"
          df -h
          # Remove unnecessary packages and files to free up space
          sudo apt-get remove -y --purge man-db
          sudo apt-get clean
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /usr/share/swift
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf /opt/ghc
          sudo rm -rf /usr/local/.ghcup
          sudo rm -rf /usr/share/doc/*
          sudo rm -rf /var/lib/apt/lists/*
          sudo rm -rf /tmp/*
          echo "Available disk space after cleanup:"
          df -h

      - name: Build Docker image for scanning
        run: |
          # Set Docker buildkit for better caching and cleanup
          export DOCKER_BUILDKIT=1
          docker build -t veris-memory-scan:latest -f dockerfiles/Dockerfile.flyio .
          # Clean up build cache to save space
          docker builder prune -f

      - name: Install Trivy
        run: |
          sudo apt-get update
          sudo apt-get install wget apt-transport-https gnupg lsb-release
          wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
          echo "deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main" | sudo tee -a /etc/apt/sources.list.d/trivy.list
          sudo apt-get update
          sudo apt-get install trivy

      - name: Run Trivy CVE scan on base images
        run: |
          echo "Scanning Ubuntu base image..."
          trivy image --severity HIGH,CRITICAL ubuntu:22.04@sha256:965fbcae990b0467ed5657caceaec165018ef44a4d2d46c7cdea80a9dff0d1ea

      - name: Run Trivy CVE scan on built image
        run: |
          echo "Scanning built Veris Memory image..."
          trivy image --severity HIGH,CRITICAL veris-memory-scan:latest

      - name: Generate vulnerability report
        run: |
          echo "Generating detailed vulnerability report..."
          trivy image --format json --output cve-report.json veris-memory-scan:latest

      - name: Upload CVE report
        uses: actions/upload-artifact@v4
        with:
          name: cve-security-report
          path: cve-report.json

      - name: Fail on HIGH or CRITICAL vulnerabilities
        run: |
          echo "Checking for HIGH or CRITICAL vulnerabilities..."
          if trivy image --severity HIGH,CRITICAL --exit-code 1 veris-memory-scan:latest; then
            echo "✅ No HIGH or CRITICAL vulnerabilities found"
          else
            echo "❌ HIGH or CRITICAL vulnerabilities detected!"
            echo "Please review the security report and update base images or dependencies"
            exit 1
          fi
