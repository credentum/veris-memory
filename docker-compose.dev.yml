version: '3.8'

services:
  # Qdrant - Vector Database (Development)
  qdrant:
    image: qdrant/qdrant:latest
    container_name: qdrant-dev
    ports:
      - "6333:6333"
    volumes:
      - ./data/qdrant-dev:/qdrant/storage
    environment:
      - QDRANT__SERVICE__HTTP_PORT=6333
      - QDRANT__LOG_LEVEL=DEBUG
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:6333/health"]
      interval: 10s
      timeout: 5s
      retries: 3

  # Neo4j - Graph Database (Development)
  neo4j:
    image: neo4j:5-community
    container_name: neo4j-dev
    ports:
      - "7474:7474"  # HTTP
      - "7687:7687"  # Bolt
    volumes:
      - ./data/neo4j-dev:/data
      - ./logs/neo4j-dev:/logs
    environment:
      - NEO4J_AUTH=neo4j/dev-password
      - NEO4J_PLUGINS=["apoc"]
      - NEO4J_dbms_memory_pagecache_size=512M
      - NEO4J_dbms_memory_heap_initial__size=512M
      - NEO4J_dbms_memory_heap_max__size=1G
      - NEO4J_dbms_logs_debug_level=INFO
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "cypher-shell", "-u", "neo4j", "-p", "dev-password", "RETURN 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  # API Service (Development)
  api:
    build:
      context: .
      dockerfile: Dockerfile.dev
      args:
        - ENVIRONMENT=development
    container_name: api-dev
    ports:
      - "8000:8000"
      - "5678:5678"  # Debug port
    volumes:
      - ./src:/app/src
      - ./configs:/app/configs
      - ./scripts:/app/scripts
      - ./production_locked_config.yaml:/app/production_locked_config.yaml:ro
    environment:
      - ENVIRONMENT=development
      - DEBUG=true
      - LOG_LEVEL=DEBUG
      - QDRANT_URL=http://qdrant:6333
      - NEO4J_URL=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=dev-password
      - EMBEDDING_MODEL=all-MiniLM-L6-v2
      - EMBEDDING_DIM=384
      - RELOAD=true  # Auto-reload on code changes
    depends_on:
      - qdrant
      - neo4j
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health/live"]
      interval: 10s
      timeout: 5s
      retries: 3

  # Redis (Development - for caching/sessions)
  redis:
    image: redis:7-alpine
    container_name: redis-dev
    ports:
      - "6379:6379"
    volumes:
      - ./data/redis-dev:/data
    command: redis-server --appendonly yes --loglevel debug
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 3

  # Adminer (Development - DB Management)
  adminer:
    image: adminer:latest
    container_name: adminer-dev
    ports:
      - "8080:8080"
    environment:
      - ADMINER_DEFAULT_SERVER=neo4j
    depends_on:
      - neo4j
    restart: unless-stopped

networks:
  default:
    name: context-store-dev
    driver: bridge

volumes:
  qdrant-dev-data:
  neo4j-dev-data:
  redis-dev-data: