{
  "schema_version": "1.0",
  "contract_name": "monitoring_tools",
  "description": "MCP tool contracts for Veris Memory monitoring and sentinel operations",
  "version": "1.0.0",
  "tools": [
    {
      "tool_name": "run_sentinel_check",
      "description": "Execute a specific Veris Sentinel monitoring check",
      "version": "1.0.0",
      "input_schema": {
        "type": "object",
        "properties": {
          "check_id": {
            "type": "string",
            "description": "Identifier for the specific check to run",
            "enum": [
              "S1-probes",
              "S2-golden-fact-recall", 
              "S4-metrics-wiring",
              "S5-security-negatives",
              "S7-config-parity",
              "S8-capacity-smoke"
            ],
            "examples": ["S1-probes", "S2-golden-fact-recall"]
          },
          "timeout_seconds": {
            "type": "integer",
            "description": "Timeout for the check execution",
            "minimum": 5,
            "maximum": 300,
            "default": 30,
            "examples": [30, 60, 120]
          },
          "context": {
            "type": "object",
            "description": "Additional context for the check",
            "properties": {
              "agent_id": {
                "type": "string",
                "description": "Agent identifier requesting the check"
              },
              "priority": {
                "type": "string",
                "enum": ["low", "normal", "high", "critical"],
                "default": "normal"
              }
            },
            "additionalProperties": false
          }
        },
        "required": ["check_id"],
        "additionalProperties": false
      },
      "output_schema": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Whether the check completed successfully"
          },
          "check_id": {
            "type": "string",
            "description": "The check that was executed"
          },
          "status": {
            "type": "string",
            "enum": ["pass", "warn", "fail"],
            "description": "Result status of the check"
          },
          "latency_ms": {
            "type": "number",
            "minimum": 0,
            "description": "Check execution time in milliseconds"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "When the check was executed"
          },
          "metrics": {
            "type": "object",
            "description": "Check-specific metrics",
            "additionalProperties": true
          },
          "notes": {
            "type": "string",
            "description": "Human-readable notes about the check result"
          },
          "error_message": {
            "type": "string",
            "description": "Error details if check failed"
          },
          "recommendations": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Actionable recommendations based on check results"
          }
        },
        "required": ["success", "check_id", "status", "latency_ms", "timestamp"],
        "additionalProperties": false
      },
      "security_features": [
        "Rate limited to prevent abuse",
        "Input validation prevents injection",
        "No sensitive data in output",
        "Access controlled by RBAC"
      ],
      "rate_limiting": {
        "requests_per_minute": 30,
        "requests_per_hour": 300
      }
    },
    {
      "tool_name": "get_sentinel_status",
      "description": "Retrieve current status and recent activity of Veris Sentinel",
      "version": "1.0.0", 
      "input_schema": {
        "type": "object",
        "properties": {
          "include_history": {
            "type": "boolean",
            "description": "Include recent check history",
            "default": false
          },
          "history_count": {
            "type": "integer",
            "description": "Number of recent checks to include",
            "minimum": 1,
            "maximum": 50,
            "default": 10
          }
        },
        "additionalProperties": false
      },
      "output_schema": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Whether status retrieval succeeded"
          },
          "sentinel_status": {
            "type": "string",
            "enum": ["active", "inactive", "error", "starting", "stopping"],
            "description": "Current operational status of Sentinel"
          },
          "last_cycle": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp of last monitoring cycle"
          },
          "next_cycle": {
            "type": "string",
            "format": "date-time", 
            "description": "Scheduled time for next monitoring cycle"
          },
          "uptime_seconds": {
            "type": "number",
            "minimum": 0,
            "description": "Sentinel uptime in seconds"
          },
          "total_cycles": {
            "type": "integer",
            "minimum": 0,
            "description": "Total monitoring cycles completed"
          },
          "check_statistics": {
            "type": "object",
            "properties": {
              "total_checks": {"type": "integer", "minimum": 0},
              "passed_checks": {"type": "integer", "minimum": 0},
              "failed_checks": {"type": "integer", "minimum": 0},
              "avg_cycle_time_ms": {"type": "number", "minimum": 0}
            },
            "required": ["total_checks", "passed_checks", "failed_checks"],
            "additionalProperties": false
          },
          "recent_history": {
            "type": "array",
            "description": "Recent check results (if requested)",
            "items": {
              "type": "object",
              "properties": {
                "cycle_id": {"type": "string"},
                "timestamp": {"type": "string", "format": "date-time"},
                "status": {"type": "string", "enum": ["pass", "warn", "fail"]},
                "duration_ms": {"type": "number", "minimum": 0},
                "checks_passed": {"type": "integer", "minimum": 0},
                "checks_total": {"type": "integer", "minimum": 0}
              },
              "required": ["cycle_id", "timestamp", "status"],
              "additionalProperties": false
            }
          },
          "message": {
            "type": "string",
            "description": "Status message"
          }
        },
        "required": ["success", "sentinel_status", "message"],
        "additionalProperties": false
      },
      "security_features": [
        "No sensitive configuration exposed",
        "Rate limited access",
        "Read-only operation"
      ],
      "rate_limiting": {
        "requests_per_minute": 60,
        "requests_per_hour": 1800
      }
    },
    {
      "tool_name": "trigger_sentinel_cycle",
      "description": "Manually trigger a complete Sentinel monitoring cycle",
      "version": "1.0.0",
      "input_schema": {
        "type": "object", 
        "properties": {
          "priority": {
            "type": "string",
            "enum": ["normal", "high", "critical"],
            "default": "normal",
            "description": "Priority level for the monitoring cycle"
          },
          "include_checks": {
            "type": "array",
            "description": "Specific checks to include (default: all)",
            "items": {
              "type": "string",
              "enum": [
                "S1-probes",
                "S2-golden-fact-recall",
                "S4-metrics-wiring", 
                "S5-security-negatives",
                "S7-config-parity",
                "S8-capacity-smoke"
              ]
            },
            "uniqueItems": true
          },
          "timeout_seconds": {
            "type": "integer",
            "description": "Maximum time to wait for cycle completion",
            "minimum": 30,
            "maximum": 600,
            "default": 180
          },
          "reason": {
            "type": "string",
            "description": "Reason for manual trigger",
            "maxLength": 255,
            "examples": ["Incident response", "Deployment validation", "Routine check"]
          }
        },
        "additionalProperties": false
      },
      "output_schema": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Whether cycle was triggered successfully"
          },
          "cycle_id": {
            "type": "string",
            "description": "Unique identifier for the triggered cycle"
          },
          "started_at": {
            "type": "string",
            "format": "date-time",
            "description": "When the cycle was started"
          },
          "estimated_completion": {
            "type": "string",
            "format": "date-time",
            "description": "Estimated completion time"
          },
          "included_checks": {
            "type": "array",
            "items": {"type": "string"},
            "description": "List of checks included in this cycle"
          },
          "cycle_status": {
            "type": "string",
            "enum": ["queued", "running", "completed", "failed"],
            "description": "Current status of the triggered cycle"
          },
          "message": {
            "type": "string",
            "description": "Status message"
          }
        },
        "required": ["success", "cycle_id", "started_at", "cycle_status", "message"],
        "additionalProperties": false
      },
      "security_features": [
        "Requires elevated permissions",
        "Rate limited to prevent abuse",
        "Audit logged for compliance",
        "Resource limits enforced"
      ],
      "rate_limiting": {
        "requests_per_minute": 5,
        "requests_per_hour": 50
      }
    },
    {
      "tool_name": "get_monitoring_metrics",
      "description": "Retrieve comprehensive monitoring metrics in Prometheus format",
      "version": "1.0.0",
      "input_schema": {
        "type": "object",
        "properties": {
          "format": {
            "type": "string",
            "enum": ["prometheus", "json"],
            "default": "prometheus",
            "description": "Output format for metrics"
          },
          "metrics_filter": {
            "type": "array",
            "description": "Filter to specific metric families",
            "items": {
              "type": "string",
              "enum": [
                "veris_sentinel_checks",
                "veris_sentinel_cycles", 
                "veris_sentinel_latency",
                "veris_system_health",
                "veris_api_requests",
                "veris_database_operations"
              ]
            },
            "uniqueItems": true
          },
          "time_range_minutes": {
            "type": "integer",
            "description": "Historical data range in minutes",
            "minimum": 1,
            "maximum": 1440,
            "default": 60
          }
        },
        "additionalProperties": false
      },
      "output_schema": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Whether metrics retrieval succeeded"
          },
          "format": {
            "type": "string",
            "enum": ["prometheus", "json"],
            "description": "Format of returned metrics"
          },
          "metrics": {
            "oneOf": [
              {
                "type": "string",
                "description": "Prometheus format metrics"
              },
              {
                "type": "object",
                "description": "JSON format metrics",
                "additionalProperties": true
              }
            ]
          },
          "collection_time": {
            "type": "string",
            "format": "date-time",
            "description": "When metrics were collected"
          },
          "metrics_count": {
            "type": "integer",
            "minimum": 0,
            "description": "Number of metrics returned"
          },
          "time_range": {
            "type": "object",
            "properties": {
              "start": {"type": "string", "format": "date-time"},
              "end": {"type": "string", "format": "date-time"},
              "duration_minutes": {"type": "integer", "minimum": 0}
            },
            "description": "Time range of metrics data"
          },
          "message": {
            "type": "string",
            "description": "Status message"
          }
        },
        "required": ["success", "format", "metrics", "collection_time", "message"],
        "additionalProperties": false
      },
      "security_features": [
        "No sensitive data in metrics",
        "Rate limited access",
        "Data aggregated to prevent information leakage"
      ],
      "rate_limiting": {
        "requests_per_minute": 30,
        "requests_per_hour": 1000
      }
    },
    {
      "tool_name": "configure_monitoring_alerts",
      "description": "Configure monitoring alert thresholds and webhooks",
      "version": "1.0.0",
      "input_schema": {
        "type": "object",
        "properties": {
          "operation": {
            "type": "string",
            "enum": ["get", "set", "validate"],
            "description": "Operation to perform on alert configuration"
          },
          "alert_config": {
            "type": "object",
            "description": "Alert configuration (for set operation)",
            "properties": {
              "thresholds": {
                "type": "object",
                "properties": {
                  "check_failure_count": {"type": "integer", "minimum": 1, "maximum": 10},
                  "response_time_ms": {"type": "integer", "minimum": 100, "maximum": 30000},
                  "error_rate_percent": {"type": "number", "minimum": 0.1, "maximum": 50},
                  "memory_usage_percent": {"type": "number", "minimum": 50, "maximum": 95},
                  "cpu_usage_percent": {"type": "number", "minimum": 50, "maximum": 95}
                },
                "additionalProperties": false
              },
              "webhooks": {
                "type": "array",
                "description": "Alert webhook URLs",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {"type": "string", "maxLength": 50},
                    "url": {"type": "string", "format": "uri"},
                    "enabled": {"type": "boolean", "default": true},
                    "alert_types": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "enum": ["critical", "warning", "info"]
                      }
                    }
                  },
                  "required": ["name", "url"],
                  "additionalProperties": false
                },
                "maxItems": 5
              },
              "notification_cooldown_minutes": {
                "type": "integer",
                "minimum": 1,
                "maximum": 1440,
                "default": 60,
                "description": "Minimum time between repeat notifications"
              }
            },
            "additionalProperties": false
          }
        },
        "required": ["operation"],
        "additionalProperties": false
      },
      "output_schema": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Whether configuration operation succeeded"
          },
          "operation": {
            "type": "string",
            "enum": ["get", "set", "validate"],
            "description": "Operation that was performed"
          },
          "current_config": {
            "type": "object",
            "description": "Current alert configuration",
            "additionalProperties": true
          },
          "validation_results": {
            "type": "array",
            "description": "Validation results (for validate operation)",
            "items": {
              "type": "object",
              "properties": {
                "field": {"type": "string"},
                "status": {"type": "string", "enum": ["valid", "warning", "error"]},
                "message": {"type": "string"}
              }
            }
          },
          "webhook_test_results": {
            "type": "array",
            "description": "Webhook connectivity test results",
            "items": {
              "type": "object", 
              "properties": {
                "webhook_name": {"type": "string"},
                "reachable": {"type": "boolean"},
                "response_time_ms": {"type": "number"},
                "error": {"type": "string"}
              }
            }
          },
          "message": {
            "type": "string",
            "description": "Status message"
          }
        },
        "required": ["success", "operation", "message"],
        "additionalProperties": false
      },
      "security_features": [
        "Webhook URLs validated for security",
        "Requires admin permissions",
        "Configuration changes audit logged",
        "Rate limiting prevents abuse"
      ],
      "rate_limiting": {
        "requests_per_minute": 10,
        "requests_per_hour": 100
      }
    }
  ],
  "security_policy": {
    "authentication": "Required for all monitoring operations",
    "authorization": "RBAC-based access control",
    "audit_logging": "All monitoring operations logged",
    "data_protection": "No sensitive data exposed in responses",
    "rate_limiting": "Per-tool rate limits enforced"
  },
  "deployment_requirements": {
    "sentinel_service": "Veris Sentinel must be running and accessible",
    "database_access": "Read-only access to monitoring database required",
    "network_access": "HTTP access to monitoring endpoints required",
    "permissions": "Monitoring role or admin permissions required"
  },
  "examples": {
    "run_health_check": {
      "tool": "run_sentinel_check",
      "input": {
        "check_id": "S1-probes",
        "timeout_seconds": 30
      },
      "expected_output": {
        "success": true,
        "check_id": "S1-probes",
        "status": "pass",
        "latency_ms": 245.7,
        "timestamp": "2025-08-16T10:30:00Z",
        "metrics": {
          "endpoints_checked": 3,
          "all_healthy": true,
          "avg_response_time_ms": 156.3
        },
        "notes": "All health endpoints responding normally"
      }
    },
    "get_current_status": {
      "tool": "get_sentinel_status", 
      "input": {
        "include_history": true,
        "history_count": 5
      },
      "expected_output": {
        "success": true,
        "sentinel_status": "active",
        "last_cycle": "2025-08-16T10:29:00Z",
        "next_cycle": "2025-08-16T10:31:00Z",
        "uptime_seconds": 86400,
        "total_cycles": 1440,
        "check_statistics": {
          "total_checks": 8640,
          "passed_checks": 8635,
          "failed_checks": 5,
          "avg_cycle_time_ms": 2150.5
        },
        "message": "Sentinel operational, 99.94% success rate"
      }
    },
    "trigger_emergency_check": {
      "tool": "trigger_sentinel_cycle",
      "input": {
        "priority": "critical",
        "reason": "Incident response validation",
        "timeout_seconds": 120
      },
      "expected_output": {
        "success": true,
        "cycle_id": "manual-20250816-103000-critical",
        "started_at": "2025-08-16T10:30:00Z",
        "estimated_completion": "2025-08-16T10:32:00Z",
        "included_checks": ["S1-probes", "S2-golden-fact-recall", "S4-metrics-wiring", "S5-security-negatives"],
        "cycle_status": "running",
        "message": "Critical priority monitoring cycle initiated"
      }
    }
  }
}