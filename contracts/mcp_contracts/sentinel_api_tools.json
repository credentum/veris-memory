{
  "schema_version": "1.0",
  "contract_name": "sentinel_api_tools",
  "description": "MCP tool contracts for direct Veris Sentinel API operations and real-time monitoring control",
  "version": "1.0.0",
  "tools": [
    {
      "tool_name": "get_sentinel_report",
      "description": "Retrieve detailed monitoring reports from Sentinel with historical data",
      "version": "1.0.0",
      "input_schema": {
        "type": "object",
        "properties": {
          "report_count": {
            "type": "integer",
            "description": "Number of recent reports to retrieve",
            "minimum": 1,
            "maximum": 50,
            "default": 10
          },
          "filter_status": {
            "type": "string",
            "enum": ["all", "pass", "warn", "fail"],
            "default": "all",
            "description": "Filter reports by status"
          },
          "check_types": {
            "type": "array",
            "description": "Filter by specific check types",
            "items": {
              "type": "string",
              "enum": [
                "S1-probes",
                "S2-golden-fact-recall",
                "S4-metrics-wiring",
                "S5-security-negatives", 
                "S7-config-parity",
                "S8-capacity-smoke"
              ]
            },
            "uniqueItems": true
          },
          "time_range_hours": {
            "type": "integer",
            "description": "Time range for report history in hours",
            "minimum": 1,
            "maximum": 168,
            "default": 24
          },
          "include_metrics": {
            "type": "boolean",
            "description": "Include detailed metrics in report",
            "default": true
          }
        },
        "additionalProperties": false
      },
      "output_schema": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Whether report retrieval succeeded"
          },
          "reports": {
            "type": "array",
            "description": "Array of monitoring reports",
            "items": {
              "type": "object",
              "properties": {
                "cycle_id": {"type": "string"},
                "timestamp": {"type": "string", "format": "date-time"},
                "status": {"type": "string", "enum": ["pass", "warn", "fail"]},
                "duration_ms": {"type": "number", "minimum": 0},
                "total_checks": {"type": "integer", "minimum": 0},
                "passed_checks": {"type": "integer", "minimum": 0},
                "failed_checks": {"type": "integer", "minimum": 0},
                "warning_checks": {"type": "integer", "minimum": 0},
                "check_results": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "check_id": {"type": "string"},
                      "status": {"type": "string", "enum": ["pass", "warn", "fail"]},
                      "latency_ms": {"type": "number", "minimum": 0},
                      "error_message": {"type": "string"},
                      "metrics": {"type": "object", "additionalProperties": true},
                      "notes": {"type": "string"}
                    },
                    "required": ["check_id", "status", "latency_ms"]
                  }
                }
              },
              "required": ["cycle_id", "timestamp", "status", "duration_ms", "total_checks"],
              "additionalProperties": false
            }
          },
          "summary": {
            "type": "object",
            "properties": {
              "total_reports": {"type": "integer", "minimum": 0},
              "success_rate": {"type": "number", "minimum": 0, "maximum": 100},
              "avg_cycle_time_ms": {"type": "number", "minimum": 0},
              "most_recent_status": {"type": "string", "enum": ["pass", "warn", "fail"]},
              "trend": {"type": "string", "enum": ["improving", "stable", "degrading"]}
            },
            "required": ["total_reports", "success_rate"],
            "additionalProperties": false
          },
          "time_range": {
            "type": "object",
            "properties": {
              "start": {"type": "string", "format": "date-time"},
              "end": {"type": "string", "format": "date-time"},
              "hours": {"type": "integer", "minimum": 0}
            },
            "required": ["start", "end", "hours"]
          },
          "message": {
            "type": "string",
            "description": "Status message"
          }
        },
        "required": ["success", "reports", "summary", "message"],
        "additionalProperties": false
      },
      "security_features": [
        "Read-only access to monitoring data",
        "No sensitive configuration exposed",
        "Rate limited to prevent resource abuse"
      ],
      "rate_limiting": {
        "requests_per_minute": 30,
        "requests_per_hour": 500
      }
    },
    {
      "tool_name": "control_sentinel_scheduler",
      "description": "Control the Sentinel monitoring scheduler (start, stop, pause, configure)",
      "version": "1.0.0",
      "input_schema": {
        "type": "object",
        "properties": {
          "action": {
            "type": "string",
            "enum": ["start", "stop", "pause", "resume", "status"],
            "description": "Action to perform on the scheduler"
          },
          "schedule_config": {
            "type": "object",
            "description": "Scheduler configuration (for start/resume actions)",
            "properties": {
              "cadence_seconds": {
                "type": "integer",
                "minimum": 30,
                "maximum": 3600,
                "description": "Interval between monitoring cycles"
              },
              "jitter_percent": {
                "type": "integer",
                "minimum": 0,
                "maximum": 50,
                "description": "Random jitter to prevent thundering herd"
              },
              "enabled_checks": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "S1-probes",
                    "S2-golden-fact-recall",
                    "S4-metrics-wiring",
                    "S5-security-negatives",
                    "S7-config-parity", 
                    "S8-capacity-smoke"
                  ]
                },
                "description": "Which checks to include in scheduled cycles"
              }
            },
            "additionalProperties": false
          },
          "reason": {
            "type": "string",
            "description": "Reason for scheduler action",
            "maxLength": 255,
            "examples": ["Maintenance window", "Performance optimization", "Incident response"]
          }
        },
        "required": ["action"],
        "additionalProperties": false
      },
      "output_schema": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Whether scheduler action succeeded"
          },
          "action": {
            "type": "string",
            "enum": ["start", "stop", "pause", "resume", "status"],
            "description": "Action that was performed"
          },
          "scheduler_status": {
            "type": "string",
            "enum": ["running", "stopped", "paused", "starting", "stopping"],
            "description": "Current scheduler status"
          },
          "current_config": {
            "type": "object",
            "description": "Current scheduler configuration",
            "properties": {
              "cadence_seconds": {"type": "integer"},
              "next_run": {"type": "string", "format": "date-time"},
              "enabled_checks": {"type": "array", "items": {"type": "string"}},
              "uptime_seconds": {"type": "number", "minimum": 0}
            },
            "additionalProperties": false
          },
          "action_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "When the action was performed"
          },
          "message": {
            "type": "string",
            "description": "Status message"
          }
        },
        "required": ["success", "action", "scheduler_status", "action_timestamp", "message"],
        "additionalProperties": false
      },
      "security_features": [
        "Requires admin privileges",
        "All actions audit logged",
        "Rate limited to prevent abuse",
        "Configuration validation enforced"
      ],
      "rate_limiting": {
        "requests_per_minute": 5,
        "requests_per_hour": 50
      }
    },
    {
      "tool_name": "query_sentinel_database",
      "description": "Query the Sentinel monitoring database for historical analysis",
      "version": "1.0.0",
      "input_schema": {
        "type": "object",
        "properties": {
          "query_type": {
            "type": "string",
            "enum": [
              "check_trends",
              "failure_analysis", 
              "performance_trends",
              "availability_summary",
              "alert_history",
              "custom_query"
            ],
            "description": "Type of analysis query to execute"
          },
          "time_range": {
            "type": "object",
            "properties": {
              "start": {"type": "string", "format": "date-time"},
              "end": {"type": "string", "format": "date-time"}
            },
            "description": "Time range for analysis"
          },
          "filters": {
            "type": "object",
            "properties": {
              "check_ids": {
                "type": "array",
                "items": {"type": "string"},
                "description": "Filter by specific check IDs"
              },
              "status": {
                "type": "array",
                "items": {"type": "string", "enum": ["pass", "warn", "fail"]},
                "description": "Filter by result status"
              },
              "min_latency_ms": {"type": "number", "minimum": 0},
              "max_latency_ms": {"type": "number", "minimum": 0}
            },
            "additionalProperties": false
          },
          "aggregation": {
            "type": "string",
            "enum": ["hourly", "daily", "weekly"],
            "default": "hourly",
            "description": "Aggregation level for time-series data"
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "maximum": 1000,
            "default": 100,
            "description": "Maximum number of results to return"
          }
        },
        "required": ["query_type"],
        "additionalProperties": false
      },
      "output_schema": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Whether database query succeeded"
          },
          "query_type": {
            "type": "string",
            "description": "Type of query that was executed"
          },
          "results": {
            "type": "array",
            "description": "Query results",
            "items": {
              "type": "object",
              "additionalProperties": true
            }
          },
          "summary": {
            "type": "object",
            "description": "Summary statistics for the query",
            "properties": {
              "total_records": {"type": "integer", "minimum": 0},
              "time_span_hours": {"type": "number", "minimum": 0},
              "unique_checks": {"type": "integer", "minimum": 0},
              "success_rate": {"type": "number", "minimum": 0, "maximum": 100}
            },
            "additionalProperties": true
          },
          "query_performance": {
            "type": "object",
            "properties": {
              "execution_time_ms": {"type": "number", "minimum": 0},
              "records_scanned": {"type": "integer", "minimum": 0},
              "cache_hit": {"type": "boolean"}
            }
          },
          "time_range": {
            "type": "object",
            "properties": {
              "start": {"type": "string", "format": "date-time"},
              "end": {"type": "string", "format": "date-time"},
              "actual_range_hours": {"type": "number", "minimum": 0}
            }
          },
          "message": {
            "type": "string",
            "description": "Status message"
          }
        },
        "required": ["success", "query_type", "results", "summary", "message"],
        "additionalProperties": false
      },
      "security_features": [
        "Read-only database access",
        "Query complexity limits enforced",
        "No raw SQL injection possible",
        "Result size limits enforced"
      ],
      "rate_limiting": {
        "requests_per_minute": 10,
        "requests_per_hour": 200
      }
    },
    {
      "tool_name": "export_monitoring_data",
      "description": "Export monitoring data in various formats for analysis or archival",
      "version": "1.0.0",
      "input_schema": {
        "type": "object",
        "properties": {
          "export_type": {
            "type": "string",
            "enum": ["csv", "json", "prometheus", "grafana_json"],
            "description": "Format for exported data"
          },
          "data_scope": {
            "type": "string",
            "enum": ["full_history", "recent_summary", "specific_range", "alerts_only"],
            "description": "Scope of data to export"
          },
          "time_range": {
            "type": "object",
            "properties": {
              "start": {"type": "string", "format": "date-time"},
              "end": {"type": "string", "format": "date-time"}
            },
            "description": "Time range for export (required for specific_range)"
          },
          "include_fields": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "timestamps",
                "check_results",
                "metrics",
                "error_details",
                "performance_stats",
                "system_info"
              ]
            },
            "description": "Fields to include in export"
          },
          "compression": {
            "type": "string",
            "enum": ["none", "gzip", "zip"],
            "default": "none",
            "description": "Compression format for export"
          }
        },
        "required": ["export_type", "data_scope"],
        "additionalProperties": false
      },
      "output_schema": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Whether export succeeded"
          },
          "export_type": {
            "type": "string",
            "description": "Format of exported data"
          },
          "export_url": {
            "type": "string",
            "format": "uri",
            "description": "URL to download the exported data"
          },
          "file_size_bytes": {
            "type": "integer",
            "minimum": 0,
            "description": "Size of exported file"
          },
          "record_count": {
            "type": "integer",
            "minimum": 0,
            "description": "Number of records in export"
          },
          "expiry_time": {
            "type": "string",
            "format": "date-time",
            "description": "When the export URL expires"
          },
          "export_metadata": {
            "type": "object",
            "properties": {
              "created_at": {"type": "string", "format": "date-time"},
              "data_range": {
                "type": "object",
                "properties": {
                  "start": {"type": "string", "format": "date-time"},
                  "end": {"type": "string", "format": "date-time"}
                }
              },
              "fields_included": {"type": "array", "items": {"type": "string"}},
              "compression_used": {"type": "string"},
              "export_duration_ms": {"type": "number", "minimum": 0}
            }
          },
          "message": {
            "type": "string",
            "description": "Status message"
          }
        },
        "required": ["success", "export_type", "export_url", "file_size_bytes", "record_count", "message"],
        "additionalProperties": false
      },
      "security_features": [
        "Temporary download URLs with expiry",
        "Access controlled by permissions",
        "Export operations audit logged",
        "Data sanitized before export"
      ],
      "rate_limiting": {
        "requests_per_minute": 3,
        "requests_per_hour": 20
      }
    }
  ],
  "monitoring_database_schema": {
    "check_results": {
      "cycle_id": "string",
      "check_id": "string", 
      "timestamp": "datetime",
      "status": "enum(pass,warn,fail)",
      "latency_ms": "float",
      "error_message": "text",
      "metrics": "json",
      "notes": "text"
    },
    "cycles": {
      "cycle_id": "string",
      "started_at": "datetime", 
      "completed_at": "datetime",
      "duration_ms": "float",
      "total_checks": "integer",
      "passed_checks": "integer",
      "failed_checks": "integer",
      "status": "enum(pass,warn,fail)"
    },
    "alerts": {
      "alert_id": "string",
      "timestamp": "datetime",
      "alert_type": "enum(critical,warning,info)",
      "source_check": "string",
      "message": "text",
      "resolved": "boolean",
      "resolved_at": "datetime"
    }
  },
  "api_endpoints": {
    "base_url": "http://localhost:9090",
    "endpoints": {
      "/status": "GET - Current Sentinel status",
      "/run": "POST - Trigger monitoring cycle", 
      "/checks": "GET - List available checks",
      "/metrics": "GET - Prometheus metrics",
      "/report": "GET - Recent cycle reports",
      "/config": "GET/PUT - Scheduler configuration",
      "/alerts": "GET/POST - Alert configuration"
    }
  },
  "examples": {
    "get_recent_reports": {
      "tool": "get_sentinel_report",
      "input": {
        "report_count": 5,
        "filter_status": "all",
        "time_range_hours": 6,
        "include_metrics": true
      },
      "expected_output": {
        "success": true,
        "reports": [
          {
            "cycle_id": "cycle-20250816-103000",
            "timestamp": "2025-08-16T10:30:00Z",
            "status": "pass",
            "duration_ms": 2150.5,
            "total_checks": 6,
            "passed_checks": 6,
            "failed_checks": 0,
            "warning_checks": 0,
            "check_results": [
              {
                "check_id": "S1-probes",
                "status": "pass",
                "latency_ms": 245.7,
                "metrics": {"endpoints_checked": 3, "all_healthy": true},
                "notes": "All health endpoints responding normally"
              }
            ]
          }
        ],
        "summary": {
          "total_reports": 5,
          "success_rate": 98.5,
          "avg_cycle_time_ms": 2248.3,
          "most_recent_status": "pass",
          "trend": "stable"
        },
        "message": "Reports retrieved successfully"
      }
    },
    "pause_monitoring": {
      "tool": "control_sentinel_scheduler",
      "input": {
        "action": "pause",
        "reason": "Maintenance window for database upgrade"
      },
      "expected_output": {
        "success": true,
        "action": "pause",
        "scheduler_status": "paused",
        "current_config": {
          "cadence_seconds": 60,
          "enabled_checks": ["S1-probes", "S4-metrics-wiring"],
          "uptime_seconds": 86400
        },
        "action_timestamp": "2025-08-16T10:30:00Z",
        "message": "Scheduler paused for maintenance window"
      }
    },
    "export_last_week": {
      "tool": "export_monitoring_data",
      "input": {
        "export_type": "csv",
        "data_scope": "specific_range", 
        "time_range": {
          "start": "2025-08-09T00:00:00Z",
          "end": "2025-08-16T00:00:00Z"
        },
        "include_fields": ["timestamps", "check_results", "performance_stats"],
        "compression": "gzip"
      },
      "expected_output": {
        "success": true,
        "export_type": "csv",
        "export_url": "https://api.veris-memory.com/exports/monitoring-20250816-103000.csv.gz",
        "file_size_bytes": 2048576,
        "record_count": 10080,
        "expiry_time": "2025-08-17T10:30:00Z",
        "message": "Monitoring data exported successfully"
      }
    }
  }
}