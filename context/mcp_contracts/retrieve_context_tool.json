{
  "schema_version": "1.0",
  "name": "retrieve_context",
  "version": "1.0.0",
  "api_version": "1.0",
  "min_client_version": "1.0.0",
  "deprecated_fields": [],
  "description": "Retrieve contextual information using semantic search and filtering",
  "inputSchema": {
    "type": "object",
    "properties": {
      "query": {
        "type": "string",
        "description": "Search query for semantic matching",
        "minLength": 1,
        "maxLength": 1000
      },
      "filters": {
        "type": "object",
        "description": "Optional filters to narrow results",
        "properties": {
          "type": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "code",
                "design",
                "decision",
                "issue",
                "requirement",
                "documentation"
              ]
            },
            "description": "Filter by context types"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Filter by tags"
          },
          "priority": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": ["low", "medium", "high", "critical"]
            },
            "description": "Filter by priority levels"
          },
          "author": {
            "type": "string",
            "description": "Filter by author"
          },
          "project": {
            "type": "string",
            "description": "Filter by project"
          },
          "date_range": {
            "type": "object",
            "properties": {
              "start": {
                "type": "string",
                "format": "date-time"
              },
              "end": {
                "type": "string",
                "format": "date-time"
              }
            }
          }
        }
      },
      "limit": {
        "type": "integer",
        "description": "Maximum number of results to return",
        "minimum": 1,
        "maximum": 100,
        "default": 10
      },
      "include_relationships": {
        "type": "boolean",
        "description": "Whether to include related context items",
        "default": false
      },
      "similarity_threshold": {
        "type": "number",
        "description": "Minimum similarity score for results",
        "minimum": 0.0,
        "maximum": 1.0,
        "default": 0.7
      },
      "retrieval_mode": {
        "type": "string",
        "description": "Retrieval strategy to use",
        "enum": ["vector", "lexical", "hybrid"],
        "default": "hybrid"
      },
      "enable_reranker": {
        "type": "boolean",
        "description": "Whether to apply cross-encoder reranking for better precision",
        "default": true
      },
      "rerank_top_k": {
        "type": "integer", 
        "description": "Number of candidates to rerank (affects latency vs quality tradeoff)",
        "minimum": 5,
        "maximum": 50,
        "default": 20
      },
      "max_hops": {
        "type": "integer",
        "description": "Maximum relationship traversal depth for GraphRAG",
        "minimum": 0,
        "maximum": 3,
        "default": 1
      },
      "relationship_types": {
        "type": "array",
        "items": {
          "type": "string",
          "enum": ["depends_on", "references", "implements", "extends", "uses", "contains", "related_to"]
        },
        "description": "Types of relationships to traverse in GraphRAG",
        "default": ["references", "related_to"]
      },
      "include_reasoning_path": {
        "type": "boolean",
        "description": "Include the reasoning path showing how results were derived",
        "default": false
      },
      "enable_community_detection": {
        "type": "boolean",
        "description": "Use community detection for better context clustering",
        "default": false
      },
      "multi_query_expansion": {
        "type": "boolean",
        "description": "Generate query paraphrases for better recall on varied phrasings",
        "default": false
      },
      "field_boosts": {
        "type": "object",
        "description": "Boost factors for different content fields",
        "properties": {
          "title": {
            "type": "number",
            "minimum": 1.0,
            "maximum": 3.0,
            "default": 1.2
          },
          "headings": {
            "type": "number", 
            "minimum": 1.0,
            "maximum": 2.0,
            "default": 1.1
          }
        },
        "default": {"title": 1.2, "headings": 1.1}
      },
      "sort_by": {
        "type": "string",
        "enum": ["timestamp", "relevance"],
        "default": "timestamp",
        "description": "Sort order for results. 'timestamp' returns newest first, 'relevance' returns highest score first"
      }
    },
    "required": ["query"]
  },
  "outputSchema": {
    "type": "object",
    "properties": {
      "success": {
        "type": "boolean",
        "description": "Whether the operation succeeded"
      },
      "results": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "context_id": {
              "type": "string",
              "description": "Unique identifier"
            },
            "type": {
              "type": "string",
              "description": "Context type"
            },
            "content": {
              "type": "object",
              "description": "Stored content"
            },
            "metadata": {
              "type": "object",
              "description": "Associated metadata"
            },
            "similarity_score": {
              "type": "number",
              "description": "Semantic similarity to query (0-1)"
            },
            "relationships": {
              "type": "array",
              "description": "Related context items (if requested)"
            },
            "created_at": {
              "type": "string",
              "format": "date-time"
            },
            "updated_at": {
              "type": "string",
              "format": "date-time"
            }
          },
          "required": ["context_id", "type", "content", "similarity_score"]
        }
      },
      "total_count": {
        "type": "integer",
        "description": "Total number of matching results"
      },
      "query_info": {
        "type": "object",
        "properties": {
          "search_time_ms": {
            "type": "number",
            "description": "Time taken for search in milliseconds"
          },
          "vector_search_used": {
            "type": "boolean",
            "description": "Whether vector search was used"
          },
          "filters_applied": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of filters that were applied"
          }
        }
      },
      "reranker_metadata": {
        "type": "object",
        "description": "Information about reranking if applied",
        "properties": {
          "enabled": {
            "type": "boolean",
            "description": "Whether reranking was applied"
          },
          "model": {
            "type": "string",
            "description": "Reranker model used"
          },
          "candidates_processed": {
            "type": "integer",
            "description": "Number of candidates reranked"
          },
          "score_range": {
            "type": "object",
            "properties": {
              "min": {"type": "number"},
              "max": {"type": "number"}
            },
            "description": "Range of reranking scores"
          }
        }
      },
      "graphrag_metadata": {
        "type": "object",
        "description": "GraphRAG traversal information",
        "properties": {
          "hops_traversed": {
            "type": "integer",
            "description": "Number of relationship hops traversed"
          },
          "relationships_followed": {
            "type": "array",
            "items": {"type": "string"},
            "description": "Types of relationships that were followed"
          },
          "community_clusters": {
            "type": "integer",
            "description": "Number of community clusters identified"
          },
          "reasoning_paths": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "path": {"type": "array", "items": {"type": "string"}},
                "confidence": {"type": "number"}
              }
            },
            "description": "Reasoning paths for how results were derived (if requested)"
          }
        }
      },
      "message": {
        "type": "string",
        "description": "Status message or error description"
      }
    },
    "required": ["success", "results", "total_count", "message"]
  },
  "security": {
    "rate_limits": {
      "requests_per_minute": 120,
      "burst_limit": 20
    },
    "validation": {
      "query_max_length": 1000,
      "max_results": 100,
      "sanitize_query": true
    }
  }
}
